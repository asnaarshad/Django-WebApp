version: 2.1

jobs:
  build:
    docker:
      - image: cimg/python:3.10
    environment:
      DJANGO_DIR: /home/circleci/Django-WebApp/django_web_app
      DJANGO_PORT: 8000
    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            sudo apt update
            sudo apt install -y git curl docker.io default-jdk sqlmap
            pip install virtualenv pylint bandit semgrep flake8 snyk trivy checkov conftest
            sudo usermod -aG docker circleci

      - run:
          name: Clone Repository
          command: |
            rm -rf Django-WebApp
            git clone https://github.com/asnaarshad/Django-WebApp.git

      - run:
          name: Set Up Python Environment
          command: |
            cd $DJANGO_DIR
            python -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt || true
            pip install pylint bandit semgrep flake8 || true

      - run:
          name: Start Django Server
          background: true
          command: |
            cd $DJANGO_DIR
            source venv/bin/activate
            python manage.py migrate
            nohup python manage.py runserver 0.0.0.0:${DJANGO_PORT} &
            sleep 10
            curl -sSf http://localhost:${DJANGO_PORT} > /dev/null || exit 1

      - run:
          name: Pylint Check
          command: |
            cd $DJANGO_DIR
            pylint . > lint-report.txt || true

      - run:
          name: Flake8 Check
          command: |
            cd $DJANGO_DIR
            flake8 . > flake8-report.txt || true

      - run:
          name: Check for Secret Keys
          command: |
            cd $DJANGO_DIR
            grep -r "SECRET_KEY" . > secret-key-check.txt || true

      - run:
          name: Bandit Scan
          command: |
            cd $DJANGO_DIR
            bandit -r . -f txt -o bandit-report.txt || true

      - run:
          name: Semgrep Scan
          command: |
            cd $DJANGO_DIR
            semgrep --config "p/python" . > semgrep-report.txt || true

      - run:
          name: Snyk Dependency Scan
          command: |
            cd $DJANGO_DIR
            snyk auth || true
            snyk test --file=requirements.txt --severity-threshold=low || true
            snyk test --file=requirements.txt --json > snyk-report.json || true

      - run:
          name: DAST - OWASP ZAP Scan
          command: |
            docker run --network="host" -t owasp/zap2docker-stable zap-baseline.py -t http://localhost:8000 || true

      - run:
          name: DAST - SQLMap Scan
          command: |
            sqlmap -u "http://localhost:8000/vulnerable_endpoint/?id=1" --batch || true

      - run:
          name: Container Security - Trivy
          command: |
            cd $DJANGO_DIR
            docker build -t django_webapp_scanned .
            trivy image django_webapp_scanned || true

      - run:
          name: Container Security - Docker Bench
          command: |
            git clone https://github.com/docker/docker-bench-security.git || true
            cd docker-bench-security
            sh docker-bench-security.sh || true

      - run:
          name: IaC Security - Conftest
          command: |
            conftest test terraform/ || true

      - run:
          name: IaC Security - Checkov
          command: |
            checkov -d terraform/ || true

      - store_artifacts:
          path: ~/project
          destination: reports

workflows:
  version: 2
  build_and_test:
    jobs:
      - build

